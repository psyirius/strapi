"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2975],{1261:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=t(3117),o=(t(7294),t(3905));const a={title:"useAPIErrorHandler",slug:"/hooks/use-api-error-handler",description:"API reference for the useAPIErrorHandler() hook",tags:["hooks","api","error-handling"]},i=void 0,l={unversionedId:"core/helper-plugin/hooks/use-api-error-handler",id:"core/helper-plugin/hooks/use-api-error-handler",title:"useAPIErrorHandler",description:"API reference for the useAPIErrorHandler() hook",source:"@site/docs/core/helper-plugin/hooks/use-api-error-handler.mdx",sourceDirName:"core/helper-plugin/hooks",slug:"/hooks/use-api-error-handler",permalink:"/hooks/use-api-error-handler",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/core/helper-plugin/hooks/use-api-error-handler.mdx",tags:[{label:"hooks",permalink:"/tags/hooks"},{label:"api",permalink:"/tags/api"},{label:"error-handling",permalink:"/tags/error-handling"}],version:"current",frontMatter:{title:"useAPIErrorHandler",slug:"/hooks/use-api-error-handler",description:"API reference for the useAPIErrorHandler() hook",tags:["hooks","api","error-handling"]},sidebar:"docs",previous:{title:"Relations",permalink:"/database/relations/reordering"},next:{title:"useCallbackRef",permalink:"/core/helper-plugin/hooks/use-callback-ref"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>formatAPIError(error: ResponseError): string</code>",id:"formatapierrorerror-responseerror-string",level:3},{value:"<code>normalizeAPIError(error: ResponseError): Object</code>",id:"normalizeapierrorerror-responseerror-object",level:3}],c={toc:p};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The purpose of this hook is to offer a unified way to handle errors thrown by API endpoints, regardless of the type of error (",(0,o.kt)("inlineCode",{parentName:"p"},"ValidationError"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ApplicationErrror")," ...)\nthat has been thrown."),(0,o.kt)("p",null,"It receives an optional error prefixing function (often ",(0,o.kt)("inlineCode",{parentName:"p"},"getTrad"),"), which will be used to make the error message translateable."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The following example shows a basic way to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"useAPIErrorHandler")," hook:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\n\nimport { useAPIErrorHandler, useFetchClient, useNotification } from '@strapi/helper-plugin';\nimport getTrad from '../utils';\n\nconst Component = () => {\n    const { get } = useFetchClient();\n    const { formatAPIError } = useAPIErrorHandler(getTrad);\n    const toggleNotification = useNotification();\n\n    const handleDeleteItem = async () => {\n        try {\n            return await get('/admin');\n        } catch(error) {\n            toggleNotification({\n                type: 'warning',\n                message: formatAPIError(error)\n            })\n        }\n    }\n\n    return (\n        <button onClick={handleDeleteItem}>Delete item</button>\n    )\n}\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"formatapierrorerror-responseerror-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"formatAPIError(error: ResponseError): string")),(0,o.kt)("p",null,"This method stringifies the ",(0,o.kt)("inlineCode",{parentName:"p"},"ResponseObject")," into a string. If multiple errors are thrown by the API, which happens e.g.\nin the case of a ",(0,o.kt)("inlineCode",{parentName:"p"},"ValidationError"),", all errors will bo concatenated into a single string."),(0,o.kt)("h3",{id:"normalizeapierrorerror-responseerror-object"},(0,o.kt)("inlineCode",{parentName:"h3"},"normalizeAPIError(error: ResponseError): Object")),(0,o.kt)("p",null,"This method is exported alongside from the ",(0,o.kt)("inlineCode",{parentName:"p"},"@strapi/helper-plugin"),". It can be used to normalize the format of ",(0,o.kt)("inlineCode",{parentName:"p"},"ResponseError"),"\nin places where the hook can not called (e.g. outside of a React component)."))}u.isMDXComponent=!0},3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>h});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),h=o,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||a;return t?n.createElement(m,i(i({ref:r},c),{},{components:t})):n.createElement(m,i({ref:r},c))}));function h(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);