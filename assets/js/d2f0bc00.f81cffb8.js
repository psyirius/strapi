"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9815],{7818:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(3117),r=(n(7294),n(3905));const o={title:"Fetching Permissions",tags:["permissions","RBAC"]},a=void 0,s={unversionedId:"core/permissions/frontend/fetching-permissions",id:"core/permissions/frontend/fetching-permissions",title:"Fetching Permissions",description:"This document lays out the code-flow of fetching the permissions in the CMS and how the data is then injected in to the app",source:"@site/docs/core/permissions/frontend/fetching-permissions.mdx",sourceDirName:"core/permissions/frontend",slug:"/core/permissions/frontend/fetching-permissions",permalink:"/core/permissions/frontend/fetching-permissions",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/core/permissions/frontend/fetching-permissions.mdx",tags:[{label:"permissions",permalink:"/tags/permissions"},{label:"RBAC",permalink:"/tags/rbac"}],version:"current",frontMatter:{title:"Fetching Permissions",tags:["permissions","RBAC"]},sidebar:"docs",previous:{title:"How Permissions Work",permalink:"/core/permissions/how-they-work"},next:{title:"Using Permissions",permalink:"/core/permissions/frontend/using-permissions"}},p={},l=[{value:"Where do we fetch them?",id:"where-do-we-fetch-them",level:2},{value:"What do we fetch?",id:"what-do-we-fetch",level:2},{value:"What do we do with the data?",id:"what-do-we-do-with-the-data",level:2}],c={toc:l};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document lays out the code-flow of fetching the permissions in the CMS and how the data is then injected in to the app\nto be used by components."),(0,r.kt)("h2",{id:"where-do-we-fetch-them"},"Where do we fetch them?"),(0,r.kt)("p",null,"At the very root of the entire admin panel we handle 4 routes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Signing into the app"),(0,r.kt)("li",{parentName:"ul"},"Not Found"),(0,r.kt)("li",{parentName:"ul"},"Collecting information from a first time user"),(0,r.kt)("li",{parentName:"ul"},"The authenticated application (where you use the CMS)")),(0,r.kt)("p",null,"Permissions, along with other vital application information is fetched in in the ",(0,r.kt)("inlineCode",{parentName:"p"},"AuthenticatedApp")," component, located\nin the ",(0,r.kt)("inlineCode",{parentName:"p"},"packages/core/admin/admin/src/AuthenticatedApp")," folder. The cache key (used with ",(0,r.kt)("inlineCode",{parentName:"p"},"react-query"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"useQueries")," hook)\nfor the particular call is ",(0,r.kt)("inlineCode",{parentName:"p"},"admin-users-permission"),"."),(0,r.kt)("h2",{id:"what-do-we-fetch"},"What do we fetch?"),(0,r.kt)("p",null,"Because permissions are based on users in this case the individual logged in, we fetch their permissions from the route:\n",(0,r.kt)("inlineCode",{parentName:"p"},"/admin/users/me/permissions"),". An example can be seen below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 426,\n      "action": "admin::api-tokens.access",\n      "subject": null,\n      "properties": {},\n      "conditions": []\n    },\n    {\n      "id": 427,\n      "action": "admin::api-tokens.regenerate",\n      "subject": null,\n      "properties": {},\n      "conditions": []\n    },\n    {\n      "id": 763,\n      "action": "plugin::content-manager.explorer.create",\n      "subject": "api::homepage.homepage",\n      "properties": {\n        "fields": ["title", "slug", "single", "multiple"],\n        "locales": ["en", "fr"]\n      },\n      "conditions": []\n    },\n    {\n      "id": 765,\n      "action": "plugin::content-manager.explorer.read",\n      "subject": "api::homepage.homepage",\n      "properties": {\n        "fields": ["title", "slug", "single", "multiple"],\n        "locales": ["en", "fr"]\n      },\n      "conditions": []\n    },\n    {\n      "id": 767,\n      "action": "plugin::content-manager.explorer.update",\n      "subject": "api::homepage.homepage",\n      "properties": {\n        "fields": ["title", "slug", "single", "multiple"],\n        "locales": ["en", "fr"]\n      },\n      "conditions": []\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"An explanation on how these work can be found ",(0,r.kt)("a",{parentName:"p",href:"/core/permissions/how-they-work"},"here"),". But as a quick overview we can see that permissions\ntypically associate to actions and in the case of the content manager they have subjects to be more granular and then fields & locales to\nbe even more granular. These actions are defined by domains of the application registered via the application as they also have effect\nwhen calling APIs."),(0,r.kt)("h2",{id:"what-do-we-do-with-the-data"},"What do we do with the data?"),(0,r.kt)("p",null,"The data is then passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"RBACProvider")," component which passes it to a public facing ",(0,r.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/learn/passing-data-deeply-with-context"},"React Context"),"\nas well as injecting the information into the global ",(0,r.kt)("inlineCode",{parentName:"p"},"redux")," store \u2013 see diagram below:"),(0,r.kt)("img",{src:"/img/permissions/permissions-into-app.png",alt:"diagram of how permissions get from the server to the application"}),(0,r.kt)("p",null,"Inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"RBACProviderContext")," we also pass the ability to refetch the permissions. These two inconjunction with one another are accessed\nvia the ",(0,r.kt)("inlineCode",{parentName:"p"},"useRBACProvider")," hook. You can see the API for this hook ",(0,r.kt)("a",{parentName:"p",href:"/core/permissions/frontend/using-permissions#typescript"},"here")))}h.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),l=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,u=d["".concat(p,".").concat(m)]||d[m]||h[m]||o;return n?i.createElement(u,a(a({ref:t},c),{},{components:n})):i.createElement(u,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);